services:
  arcane:
    image: ghcr.io/ofkm/arcane:latest
    container_name: arcane
    # ports:     # Uncomment if not using traefik labels
    #   - '3100:3000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./arcane-data:/app/data # Persists Arcane's data
    environment:
      - APP_ENV=production # Required for Docker
      - PUBLIC_SESSION_SECRET=${PUBLIC_SESSION_SECRET}      # Generate with: openssl rand -base64 32
      # --- Optional: For matching volume permissions to your host user ---
      - PUID=1000
      - PGID=1000
      # --- Optional: Usually auto-detected, set if Docker access fails ---
      # - DOCKER_GID=998 # GID of the 'docker' group or docker.sock
      # --- Optional: For local HTTP testing ONLY ---
      # - PUBLIC_ALLOW_INSECURE_COOKIES=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.arcane.entrypoints=http"
      - "traefik.http.routers.arcane.rule=Host(`arcane.yourdomain.com`)"
      - "traefik.http.middlewares.arcane-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.arcane.middlewares=arcane-https-redirect"
      - "traefik.http.routers.arcane-secure.entrypoints=https"
      - "traefik.http.routers.arcane-secure.rule=Host(`arcane.yourdomain.com`)"
      - "traefik.http.routers.arcane-secure.tls=true"
      - "traefik.http.routers.arcane-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.arcane-secure.service=arcane"
      - "traefik.http.services.arcane.loadbalancer.server.port=3000"
    networks:
      - proxy
    restart: unless-stopped

volumes:
  arcane-data: # Defines the named volume used above
    driver: local

networks:
  proxy:
    external: true